{"ast":null,"code":"/**\n * A function that merges React refs into one.\n * Supports both functions and ref objects created using createRef() and useRef().\n *\n * Usage:\n * ```jsx\n * <div ref={mergeRefs(ref1, ref2, ref3)} />\n * ```\n *\n * @param {...Array<Function|object>} inputRefs Array of refs\n * @returns {Function} Merged refs\n */\nexport default function mergeRefs() {\n  for (var _len = arguments.length, inputRefs = new Array(_len), _key = 0; _key < _len; _key++) {\n    inputRefs[_key] = arguments[_key];\n  }\n  var filteredInputRefs = inputRefs.filter(Boolean);\n  if (filteredInputRefs.length <= 1) {\n    return filteredInputRefs[0];\n  }\n  return function mergedRefs(ref) {\n    filteredInputRefs.forEach(function (inputRef) {\n      if (typeof inputRef === 'function') {\n        inputRef(ref);\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        inputRef.current = ref;\n      }\n    });\n  };\n}","map":{"version":3,"names":["mergeRefs","_len","arguments","length","inputRefs","Array","_key","filteredInputRefs","filter","Boolean","mergedRefs","ref","forEach","inputRef","current"],"sources":["/Users/Rickychen/Documents/Coding/BootCamp/Potfolio_Qi_Chen/node_modules/merge-refs/dist/esm/index.js"],"sourcesContent":["/**\n * A function that merges React refs into one.\n * Supports both functions and ref objects created using createRef() and useRef().\n *\n * Usage:\n * ```jsx\n * <div ref={mergeRefs(ref1, ref2, ref3)} />\n * ```\n *\n * @param {...Array<Function|object>} inputRefs Array of refs\n * @returns {Function} Merged refs\n */\nexport default function mergeRefs() {\n  for (var _len = arguments.length, inputRefs = new Array(_len), _key = 0; _key < _len; _key++) {\n    inputRefs[_key] = arguments[_key];\n  }\n\n  var filteredInputRefs = inputRefs.filter(Boolean);\n\n  if (filteredInputRefs.length <= 1) {\n    return filteredInputRefs[0];\n  }\n\n  return function mergedRefs(ref) {\n    filteredInputRefs.forEach(function (inputRef) {\n      if (typeof inputRef === 'function') {\n        inputRef(ref);\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        inputRef.current = ref;\n      }\n    });\n  };\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,SAAS,GAAG;EAClC,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,SAAS,GAAG,IAAIC,KAAK,CAACJ,IAAI,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;IAC5FF,SAAS,CAACE,IAAI,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;EACnC;EAEA,IAAIC,iBAAiB,GAAGH,SAAS,CAACI,MAAM,CAACC,OAAO,CAAC;EAEjD,IAAIF,iBAAiB,CAACJ,MAAM,IAAI,CAAC,EAAE;IACjC,OAAOI,iBAAiB,CAAC,CAAC,CAAC;EAC7B;EAEA,OAAO,SAASG,UAAU,CAACC,GAAG,EAAE;IAC9BJ,iBAAiB,CAACK,OAAO,CAAC,UAAUC,QAAQ,EAAE;MAC5C,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;QAClCA,QAAQ,CAACF,GAAG,CAAC;MACf,CAAC,MAAM;QACL;QACAE,QAAQ,CAACC,OAAO,GAAGH,GAAG;MACxB;IACF,CAAC,CAAC;EACJ,CAAC;AACH"},"metadata":{},"sourceType":"module"}